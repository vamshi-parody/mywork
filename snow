---
- name: Minimal ServiceNow Change Record and Tasks Validation
  hosts: localhost
  gather_facts: no
  vars:
    cr_number: "{{ cr_number }}"
    task_list: "{{ task_list }}"
    api_base: "https://{{ snow_instance }}/api/now/table"
    headers: {"Accept": "application/json"}
    today: "{{ lookup('pipe', 'date +%Y-%m-%d') }}"

  tasks:
    - name: Validate Change Record
      uri:
        url: "{{ api_base }}/change_request?sysparm_query=number={{ cr_number }}&sysparm_fields=state,start_date"
        method: GET
        user: "{{ snow_user }}"
        password: "{{ snow_pass }}"
        force_basic_auth: yes
        headers: "{{ headers }}"
        return_content: yes
      register: cr
      failed_when: >
        cr.json.result | length == 0 or
        cr.json.result[0].state != 'approved' or
        cr.json.result[0].start_date | regex_replace('T.*', '') != today
      no_log: true

    - name: Get and Validate Tasks
      uri:
        url: "{{ api_base }}/change_task?sysparm_query=change_request.number={{ cr_number }}&sysparm_fields=short_description,state,planned_start_date"
        method: GET
        user: "{{ snow_user }}"
        password: "{{ snow_pass }}"
        force_basic_auth: yes
        headers: "{{ headers }}"
        return_content: yes
      register: tasks
      no_log: true

    - name: Validate Tasks Match Requirements
      assert:
        that: >
          {% for task in task_list %}
          tasks.json.result | selectattr('short_description', 'search', task) | list | length == 1 and
          (tasks.json.result | selectattr('short_description', 'search', task) | list)[0].state in ['ready', 'assigned', 'pending'] and
          (tasks.json.result | selectattr('short_description', 'search', task) | list)[0].planned_start_date | regex_replace('T.*', '') == today
          {{ ' and ' if not loop.last else '' }}
          {% endfor %}
        fail_msg: "One or more tasks failed validation"
      register: result
