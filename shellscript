#!/bin/bash

input_file="input.csv"
output_file="output.csv"
timestamp=$(date '+%Y-%m-%d %H:%M:%S')

# Create header
echo "TimeStamp,ServerName,ServerStatus,ServerStatusCode,CMDBAppName,APMNumber,ApplicationName,RecoveryGroup,SubDivision,RTO" > "$output_file"

# Process each line, maintaining server-status relationship
tail -n +2 "$input_file" | while IFS=, read -r ServerName ServerIPAddress AssertType CMDBAppName APMNumber RecoveryGroup SubDivision RTO ITDepartment number CMDBPrefix AppServiceName DNSDomain RecoveryStartupPriority OSVersion InTestScope
do
    # Check ports based on server type, store result for this specific server
    if [[ "${AssertType,,}" == *"linux"* ]]; then
        nc -zv -w1 "$ServerIPAddress" 22 >/dev/null 2>&1
        if [ $? -eq 0 ]; then
            server_status="UP"
        else
            server_status="DOWN"
        fi
    else
        nc -zv -w1 "$ServerIPAddress" 3389 >/dev/null 2>&1
        if [ $? -eq 0 ]; then
            server_status="UP"
        else
            server_status="DOWN"
        fi
    fi
    
    # Ping check for this specific server
    ping -c1 -W1 "$ServerIPAddress" >/dev/null 2>&1
    ping_status=$?
    
    if [ $ping_status -eq 0 ]; then
        status_code="1"
    else
        status_code="0"
    fi
    
    # Set RTO for this specific server
    if [[ "$SubDivision" == "FAS Technology" ]]; then
        rto="0-6 Hours"
    else
        rto="6-24 Hours"
    fi
    
    # Write this server's data and its corresponding status to output
    echo "$timestamp,$ServerName,$server_status,$status_code,$CMDBAppName,$APMNumber,$AppServiceName,$RecoveryGroup,$SubDivision,$rto" >> "$output_file"
done
