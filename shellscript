---
- name: Validate ServiceNow Change Record and Task
  hosts: localhost
  gather_facts: no

  vars:
    servicenow_instance: "your-instance.service-now.com"  # Replace with your ServiceNow instance
    servicenow_username: "your-username"  # Replace with your ServiceNow username
    servicenow_password: "your-password"  # Replace with your ServiceNow password
    change_record_number: "CHG2408545"  # Input your Change Record number
    change_task_number: "CTASK3701290"  # Input your Change Task number
    short_description_match: "Connectivity"  # Variable for short description to match

  tasks:
    - name: Get current Ansible date
      set_fact:
        ansible_date: "{{ lookup('pipe', 'date +%Y-%m-%dT%H:%M:%S') }}"
    
    - name: Retrieve ServiceNow Change Record
      uri:
        url: "https://{{ servicenow_instance }}/api/now/table/change_request?sysparm_query=number={{ change_record_number }}"
        method: GET
        user: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        force_basic_auth: yes
        return_content: yes
        headers:
          Accept: "application/json"
      register: change_record_response
      no_log: true

    - name: Fail if Change Record does not exist
      fail:
        msg: "The Change Record {{ change_record_number }} is invalid or does not exist."
      when: change_record_response.json.result | length == 0

    - name: Extract Change Record data
      set_fact:
        change_record: "{{ change_record_response.json.result[0] }}"
    
    - name: Validate Change Record state is 'New'
      fail:
        msg: "The Change Record {{ change_record_number }} is not in 'New' state. Current state: {{ change_record.state }}"
      when: change_record.state | lower != "new"

    - name: Validate Ansible date is within Change Record's start and end date
      fail:
        msg: "Ansible date {{ ansible_date }} is not between Change Record start date {{ change_record.planned_startdate }} and end date {{ change_record.planned_enddate }}."
      when: not (ansible_date >= change_record.planned_startdate and ansible_date <= change_record.planned_enddate)

    - name: Retrieve Change Tasks for the Change Record
      set_fact:
        change_tasks: "{{ change_record.change_tasks }}"
    
    - name: Check if specified Change Task exists
      set_fact:
        matching_task: "{{ change_tasks | selectattr('task_number', 'equalto', change_task_number) | list | first }}"
      failed_when: matching_task is not defined
      msg: "Change Task {{ change_task_number }} does not exist under Change Record {{ change_record_number }}."

    - name: Validate Change Task state is 'Implement'
      fail:
        msg: "Change Task {{ change_task_number }} is not in 'Implement' state. Current state: {{ matching_task.state }}"
      when: matching_task.state | lower != "implement"

    - name: Validate Change Task short description matches
      fail:
        msg: "Change Task {{ change_task_number }} short description does not match '{{ short_description_match }}'. Found: {{ matching_task.short_description }}"
      when: matching_task.short_description != short_description_match

    - name: Validate Ansible date is within Change Task's dates
      fail:
        msg: "Ansible date {{ ansible_date }} is not between Change Task's start date and end date."
      when: not (ansible_date >= matching_task.expected_start and ansible_date <= change_record.planned_enddate)

    - name: Success message
      debug:
        msg: "Validation passed: Change Record {{ change_record_number }} and Change Task {{ change_task_number }} are valid for processing."
